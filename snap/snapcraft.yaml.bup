name: nanomq
base: core24
version: 0.22.8
summary: All-around Edge Messaging Platform
description: |
  NanoMQ MQTT Broker (NanoMQ) is an all-around Edge Messaging Platform
  that includes a blazing-fast MQTT Broker for the IoT/IIoT and a
  lightweight Messaging Bus for SDV.

  NanoMQ's embedded Actor architecture extends NNG's internal
  asynchronous I/O, plus an enhanced message passing and scheduling
  system to maximize the overall capacity. Fine-tuned towards the
  embedded environment and mission-critical scenarios.

  NanoMQ fully supports MQTT V3.1.1/3.1 and MQTT V5.0.

  For more information, please visit [NanoMQ homepage](https://nanomq.io/)
grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots
source-code: https://github.com/nanomq/nanomq.git
license: MIT
assumes:
  #  - command
  - command-chain
apps:
  nanomq:
    command: usr/local/bin/nanomq start --conf $SNAP_DATA/nanomq.conf
    command-chain:
      - wrappers/config
      - wrappers/daemon
    daemon: simple
    restart-condition: always
    plugs:
      - network
      - network-bind
  cli:
    command: usr/local/bin/nanomq_cli
    plugs:
      - network
      - network-bind
  edit:
    command: bin/vi
    command-chain:
      - wrappers/config
      - wrappers/edit
parts:
  nanomq:
    plugin: cmake
    source: local/0.22.8
    cmake-generator: Ninja
    cmake-parameters:
      - -DDEBUG=ON # Enables the debug flag. Default is OFF.
      #-DBUILD_NFTP=ON
  #-DNNG_ENABLE_QUIC=ON         # Enables the QUIC bridging. Requires libmsquic. Default is OFF.
  #-DENABLE_AWS_BRIDGE=ON       # Enables the AWS IoT Core bridging.Â Can't co-exist with QUIC. Default is OFF.
  #-DNNG_ENABLE_TLS=ON          # Builds NanoMQ with TLS support. Requires [mbedtls](https://github.com/Mbed-TLS/mbedtls).
  #-DBUILD_CLIENT=OFF           # Disables the client suite. Default is ON.
  #-DBUILD_ZMQ_GATEWAY=ON       # Builds with ZeroMQ gateway tool. Default is OFF.
  #-DBUILD_DDS_PROXY=ON         # Builds with DDS proxy. Default is OFF.
  #-DBUILD_VSOMEIP_GATEWAY      # Build vsomeip gateway.
  #-DBUILD_NNG_PROXY            # Build nng proxy.
  #-DBUILD_BENCH=ON             # Builds with MQTT bench. Default is OFF.
  #-DENABLE_JWT=ON              # Builds JWT dependency for the HTTP server. Default is OFF.
  #-DNNG_ENABLE_SQLITE=ON       # Builds with SQLite support. Default is OFF.
  #-DBUILD_STATIC_LIB=ON        # Builds as a static library. Default is OFF.
  #-DBUILD_SHARED_LIBS=ON       # Builds as a shared library. Default is OFF.
  #-DASAN=ON                    # Enables sanitizer. Default is OFF.
  #-DNOLOG=1                    # Disable the log system. Default is OFF.
  #-DDEBUG_TRACE=ON             # Enables ptrace. Default is OFF.
  #-DENABLE_RULE_ENGINE=ON      # Enable rule engine. Default is OFF.
  #-DENABLE_MYSQL=ON            # Enable MySQL. Default is OFF.
  #-DENABLE_ACL                 # Enable ACL.
  #-DENABLE_SYSLOG              # Enable syslog.
  #
  # #################
  # Perfomance Tuning
  # #################
  #-DNNG_RESOLV_CONCURRENCY=1   # Limit the number of threads in NanoMQ.
  #-DNOLOG=1                    # Debugging System. 1=ON, 0=OFF.
  #-DMQ=1                       # Message Queue Support. 1=ON, 0=OFF.
  #
  # #############
  # System Tuning
  # #############
  #-DNANO_PACKET_SIZE=64        # Set max size of fixed header + variable header for MQTT packet.
  #-DNANO_HEADER_SIZE=5         # Set max fixed header size for MQTT packet.
  #-DNANO_PROPERTY_SIZE=32      # Set max property size for MQTT packet.
  #-DNANO_QOS_LEN=64            # Set queue length for QoS message.
  #-DNANO_MSQ_LEN=64            # Set queue length for a resending message.
  #-DPARALLEL=32                # Set logical concurrency limitation.
  #stage-packages:
  #- libmsquic # If NNG_ENABLE_QUIC is ON

  local:
    plugin: dump
    source: ./src
  crash:
    after: [nanomq]
    plugin: nil
    override-prime: |
      exit 0
